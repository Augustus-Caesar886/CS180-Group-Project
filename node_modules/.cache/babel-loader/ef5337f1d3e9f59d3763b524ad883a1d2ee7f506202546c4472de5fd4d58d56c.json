{"ast":null,"code":"var _jsxFileName = \"/Users/arleenkaur/CS180/CS180-Group-Project/src/classroomMenuPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClassroomMenuPage() {\n  _s();\n  const location = useLocation();\n  const {\n    classrooms\n  } = location.state || {};\n  const classroomCode = location.pathname.split('/').pop(); // Get the classroom code from the URL\n\n  const classroom = classrooms.find(c => c.code === classroomCode);\n  if (!classroom) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Classroom not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Sort students alphabetically\n  const sortedStudentsAlphabetically = [...classroom.students].sort((a, b) => a.username.localeCompare(b.username));\n\n  // Group students by major\n  const studentsByMajor = classroom.students.reduce((acc, student) => {\n    if (!acc[student.major]) {\n      acc[student.major] = [];\n    }\n    acc[student.major].push(student);\n    return acc;\n  }, {});\n  const [sortOption, setSortOption] = useState('alphabetically');\n  const handleSortChange = option => {\n    setSortOption(option);\n  };\n  const displayStudents = sortOption === 'alphabetically' ? sortedStudentsAlphabetically : Object.keys(studentsByMajor).map(major => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: major\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: studentsByMajor[major].map((student, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [student.username, \" (\", student.major, \")\"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, major, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [classroom.name, \" (\", classroom.code, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleSortChange('alphabetically'),\n      children: \"Sort Alphabetically\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleSortChange('byMajor'),\n      children: \"Sort by Major\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Students\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), sortOption === 'alphabetically' ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sortedStudentsAlphabetically.map((student, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [student.username, \" (\", student.major, \")\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this) : displayStudents]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(ClassroomMenuPage, \"SLMgMP51ljJtsaV/I1CjtH5Lauc=\", false, function () {\n  return [useLocation];\n});\n_c = ClassroomMenuPage;\nexport default ClassroomMenuPage;\nvar _c;\n$RefreshReg$(_c, \"ClassroomMenuPage\");","map":{"version":3,"names":["React","useState","useLocation","jsxDEV","_jsxDEV","ClassroomMenuPage","_s","location","classrooms","state","classroomCode","pathname","split","pop","classroom","find","c","code","children","fileName","_jsxFileName","lineNumber","columnNumber","sortedStudentsAlphabetically","students","sort","a","b","username","localeCompare","studentsByMajor","reduce","acc","student","major","push","sortOption","setSortOption","handleSortChange","option","displayStudents","Object","keys","map","i","style","padding","name","onClick","index","_c","$RefreshReg$"],"sources":["/Users/arleenkaur/CS180/CS180-Group-Project/src/classroomMenuPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nfunction ClassroomMenuPage() {\n    const location = useLocation();\n    const { classrooms } = location.state || {};\n    const classroomCode = location.pathname.split('/').pop();  // Get the classroom code from the URL\n\n    const classroom = classrooms.find(c => c.code === classroomCode);\n\n    if (!classroom) {\n        return <div>Classroom not found.</div>;\n    }\n\n    // Sort students alphabetically\n    const sortedStudentsAlphabetically = [...classroom.students].sort((a, b) => a.username.localeCompare(b.username));\n\n    // Group students by major\n    const studentsByMajor = classroom.students.reduce((acc, student) => {\n        if (!acc[student.major]) {\n            acc[student.major] = [];\n        }\n        acc[student.major].push(student);\n        return acc;\n    }, {});\n\n    const [sortOption, setSortOption] = useState('alphabetically');\n\n    const handleSortChange = (option) => {\n        setSortOption(option);\n    };\n\n    const displayStudents = sortOption === 'alphabetically'\n        ? sortedStudentsAlphabetically\n        : Object.keys(studentsByMajor).map(major => (\n            <div key={major}>\n                <h4>{major}</h4>\n                <ul>\n                    {studentsByMajor[major].map((student, i) => (\n                        <li key={i}>{student.username} ({student.major})</li>\n                    ))}\n                </ul>\n            </div>\n        ));\n\n    return (\n        <div style={{ padding: '2rem' }}>\n            <h2>{classroom.name} ({classroom.code})</h2>\n            <button onClick={() => handleSortChange('alphabetically')}>Sort Alphabetically</button>\n            <button onClick={() => handleSortChange('byMajor')}>Sort by Major</button>\n\n            <h3>Students</h3>\n            {sortOption === 'alphabetically' ? (\n                <ul>\n                    {sortedStudentsAlphabetically.map((student, index) => (\n                        <li key={index}>{student.username} ({student.major})</li>\n                    ))}\n                </ul>\n            ) : (\n                displayStudents\n            )}\n        </div>\n    );\n}\n\nexport default ClassroomMenuPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}