{"ast":null,"code":"var _jsxFileName = \"/Users/arleenkaur/CS180/CS180-Group-Project/src/quizMenuPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizMenuPage() {\n  _s();\n  const {\n    username\n  } = useLocation().state || {};\n  const navigate = useNavigate();\n  const questions = [{\n    question: \"Favorite subject?\",\n    options: [\"Math\", \"Physics\", \"Chemistry\", \"Biology\", \"Writing\", \"Arts\"]\n  }, {\n    question: \"Do you prefer working alone or in a team?\",\n    options: [\"Alone\", \"In a team\", \"Both\"]\n  }];\n  const majorOptions = [{\n    name: \"Mechanical Engineering\",\n    description: \"...\",\n    careers: [/*…*/]\n  }, {\n    name: \"Computer Engineering\",\n    description: \"...\",\n    careers: [/*…*/]\n  }];\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState(JSON.parse(localStorage.getItem('quizAnswers')) || Array(questions.length).fill(null));\n  const handleAnswerChange = e => {\n    const newA = [...answers];\n    newA[currentQuestionIndex] = e.target.value;\n    setAnswers(newA);\n    localStorage.setItem('quizAnswers', JSON.stringify(newA));\n  };\n  const determineMajor = ans => {\n    const score = ans.reduce((acc, a) => acc + (['Math', 'Physics'].includes(a) ? 1 : 0), 0);\n    return score >= 2 ? majorOptions[1] : majorOptions[0];\n  };\n  const handleNext = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(i => i + 1);\n    } else {\n      const chosenMajor = determineMajor(answers);\n\n      // 1️⃣ Update student major in classroom\n      const users = JSON.parse(localStorage.getItem('users')) || [];\n      const user = users.find(u => u.username === username);\n      if (user && user.studentCode) {\n        const classes = JSON.parse(localStorage.getItem('classrooms')) || [];\n        const cls = classes.find(c => c.code === user.studentCode);\n        if (cls) {\n          const stu = cls.students.find(s => s.username === username);\n          if (stu) {\n            stu.major = chosenMajor.name;\n            localStorage.setItem('classrooms', JSON.stringify(classes));\n          }\n        }\n      }\n\n      // 2️⃣ Navigate to result\n      navigate('/result', {\n        state: {\n          username,\n          answers,\n          major: chosenMajor\n        }\n      });\n    }\n  };\n  const q = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Quiz for \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: q.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), q.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"ans\",\n        value: opt,\n        checked: answers[currentQuestionIndex] === opt,\n        onChange: handleAnswerChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: opt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 14\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNext,\n      children: currentQuestionIndex < questions.length - 1 ? 'Next' : 'Finish'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(QuizMenuPage, \"KNb2Ds0+5RAD9l0hoqbKU1ghw00=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = QuizMenuPage;\nexport default QuizMenuPage;\nvar _c;\n$RefreshReg$(_c, \"QuizMenuPage\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","QuizMenuPage","_s","username","state","navigate","questions","question","options","majorOptions","name","description","careers","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","JSON","parse","localStorage","getItem","Array","length","fill","handleAnswerChange","e","newA","target","value","setItem","stringify","determineMajor","ans","score","reduce","acc","a","includes","handleNext","i","chosenMajor","users","user","find","u","studentCode","classes","cls","c","code","stu","students","s","major","q","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","map","opt","type","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/arleenkaur/CS180/CS180-Group-Project/src/quizMenuPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nfunction QuizMenuPage() {\n  const { username } = useLocation().state || {};\n  const navigate = useNavigate();\n\n  const questions = [\n    { question: \"Favorite subject?\", options: [\"Math\", \"Physics\", \"Chemistry\", \"Biology\", \"Writing\", \"Arts\"] },\n    { question: \"Do you prefer working alone or in a team?\", options: [\"Alone\", \"In a team\", \"Both\"] },\n  ];\n  const majorOptions = [\n    { name: \"Mechanical Engineering\", description: \"...\", careers: [/*…*/] },\n    { name: \"Computer Engineering\", description: \"...\", careers: [/*…*/] },\n  ];\n\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState(\n    JSON.parse(localStorage.getItem('quizAnswers')) || Array(questions.length).fill(null)\n  );\n\n  const handleAnswerChange = (e) => {\n    const newA = [...answers];\n    newA[currentQuestionIndex] = e.target.value;\n    setAnswers(newA);\n    localStorage.setItem('quizAnswers', JSON.stringify(newA));\n  };\n\n  const determineMajor = (ans) => {\n    const score = ans.reduce((acc, a) => acc + (['Math','Physics'].includes(a) ? 1 : 0), 0);\n    return score >= 2 ? majorOptions[1] : majorOptions[0];\n  };\n\n  const handleNext = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(i => i + 1);\n    } else {\n      const chosenMajor = determineMajor(answers);\n\n      // 1️⃣ Update student major in classroom\n      const users = JSON.parse(localStorage.getItem('users')) || [];\n      const user = users.find(u => u.username === username);\n      if (user && user.studentCode) {\n        const classes = JSON.parse(localStorage.getItem('classrooms')) || [];\n        const cls = classes.find(c => c.code === user.studentCode);\n        if (cls) {\n          const stu = cls.students.find(s => s.username === username);\n          if (stu) {\n            stu.major = chosenMajor.name;\n            localStorage.setItem('classrooms', JSON.stringify(classes));\n          }\n        }\n      }\n\n      // 2️⃣ Navigate to result\n      navigate('/result', {\n        state: { username, answers, major: chosenMajor }\n      });\n    }\n  };\n\n  const q = questions[currentQuestionIndex];\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h2>Quiz for {username}</h2>\n      <p>{q.question}</p>\n      {q.options.map((opt,i) => (\n        <div key={i}>\n          <input\n            type=\"radio\" name=\"ans\" value={opt}\n            checked={answers[currentQuestionIndex] === opt}\n            onChange={handleAnswerChange}\n          /> <label>{opt}</label>\n        </div>\n      ))}\n      <button onClick={handleNext}>\n        {currentQuestionIndex < questions.length - 1 ? 'Next' : 'Finish'}\n      </button>\n    </div>\n  );\n}\n\nexport default QuizMenuPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}